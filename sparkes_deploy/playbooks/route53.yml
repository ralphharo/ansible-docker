- name: Add Route53
  hosts: all
  gather_facts: true
  become: False

  vars:
    - zone_domain: odl.io.
    - public_ip: "{{ provision_inventory_public_ip }}"

  tasks:

    - name: Records to add
      set_fact:
        route53_records_to_add:
          - zone: '{{ zone_domain }}'
            private_zone: False
            comment: ''
            records:
              - record: '{{ provision_inventory_hostname }}.odl.io'
                type: A
                ttl: 300
                value: '{{ public_ip }}'

    - name: get boto version
      command: python -c "import boto; print boto.Version"
      changed_when: false
      ignore_errors: true
      register: boto_version
      become: true

    - block:
        - name: install pip
          command: "sudo sudo easy_install pip"

        - name: install pip
          pip:
            name: boto
            extra_args: -U
          changed_when: false
      # when: "{{ boto_version.stdout | version_compare('2.28.0', '<') }}"
      become: true

    - name: Record(s) should be added/updated
      route53:
        region: "{{ item.0.region | default(omit) }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        profile: "{{ item.0.boto_profile | default(omit) }}"
        zone: "{{ item.0.zone }}"
        record: "{{ item.1.record }}"
        type: "{{ item.1.type }}"
        ttl: "{{ item.1.ttl | default(omit) }}"
        value: "{{ item.1.value }}"
        command: create
        wait: True
        alias: "{{ item.1.alias | default(omit) }}"
        alias_hosted_zone_id: "{{ item.1.alias_hosted_zone_id | default(omit) }}"
        overwrite: "{{ item.1.overwrite | default('True') }}"
        private_zone: "{{ item.0.private_zone | default(omit) }}"
        validate_certs: True
      with_subelements:
        - "{{ route53_records_to_add }}"
        - records

    - name: update node hostname
      command: sudo hostnamectl set-hostname --static "{{ provision_inventory_hostname }}.odl.io"
      changed_when: false
      become: true

    - name: update hostname
      replace:
        dest: /etc/cloud/cloud.cfg
        regexp: 'preserve_hostname'
        replace: 'preserve_hostname: true'
      become: true
